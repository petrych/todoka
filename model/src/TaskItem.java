/** * A task consists of a text field (name) and a checkbox (for marking the task as completed). * A task can be created, removed and completed. * A task is stored always in one time list (mandatory; Today by default). * May also be listed in one (only one) category. * * * IMPLEMENTATION status: * * (in progress) "create a task" * */public class TaskItem {    private String taskName; // text field of a task    private boolean completed;    // Default time period.    // Defines the default file for reading and writing in controller.TaskDatabase.    private static TimePeriod timePeriod = TimePeriod.TODAY;    private String category;    // Create a task with the given name.    public TaskItem(String taskName) {        this.taskName = taskName;        this.completed = false;        this.category = null;    }    // TODO - Create 2 constructors: name + timePeriod, name + timePeriod + checked    public String taskToString() {        String str = "Task name: " + this.getName() +                ", time period: " + this.getTimePeriod();        if (this.isCompleted()) {            str = str + ", completed status: yes";        } else {            str = str + ", completed status: no";        }        if (this.getCategory() == null) {            str = str + ", category: empty";        } else {            str = str + ", category: " + this.getCategory().toString();        }        return str;    }    public String getName() {        return taskName;    }    public void changeName(String name) {        this.taskName = name;    }    public static TimePeriod getDefaultTimePeriod() {        return timePeriod;    }    public TimePeriod getTimePeriod() {        return timePeriod;    }    public void setTimePeriod(TimePeriod timePeriod) {        this.timePeriod = timePeriod;    }    public String getCategory() {        return category;    }    public void changeCategory(String category) {        this.category = category;    }    public boolean isCompleted() {        return completed;    }    public void setCompleted() {        this.completed = true;    }}